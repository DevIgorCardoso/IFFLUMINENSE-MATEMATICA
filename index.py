import streamlit as st
import time
import pandas as pd
import plotly.graph_objects as go
import numpy as np

st.set_page_config(page_title="IFFluminense Campus Maca√©")

with st.sidebar:

    with st.spinner("Carregando..."):
        time.sleep(3)
    st.image("./IF.png")
    st.markdown(
        """Trabalho apresentado ao Curso Integrado de Eletr√¥nica do IFFLUMINENSE ‚Äì Instituto Federal de Educa√ß√£o, Ci√™ncia e Tecnologia Fluminense ‚Äì Campus MACA√â  
    para as disciplinas de: Matem√°tica  
    Professora: Izabela"""
    )
    st.success("Semin√°rio arregado com sucesso!")

st.title("FUN√á√ÉO POLINOMIAL DO 1¬∫ GRAU")

tab1, tab3, tab4 = st.tabs(["üìù Teoria", "‚ö° Eletr√¥nica", "üìü Oscilosc√≥pio"])

with tab1:
    st.title("Fun√ß√£o Afim")

   
    st.write("""A **fun√ß√£o afim** √© uma fun√ß√£o matem√°tica da forma: f(x) = ax + b, onde: (a) √© o coeficiente angular, que determina a inclina√ß√£o da reta; (b) √© o coeficiente linear, que representa o valor de f(x) quando x = 0. A fun√ß√£o afim √© uma fun√ß√£o linear, sendo sua representa√ß√£o gr√°fica uma reta. O coeficiente angular (a) pode ser positivo, negativo ou igual a zero, o que altera a dire√ß√£o e a inclina√ß√£o da reta: Se (a > 0), a reta √© crescente. Se (a < 0), a reta √© decrescente. Se (a = 0), a reta √© horizontal. Gr√°fico da Fun√ß√£o Afim Para visualizar a fun√ß√£o afim, voc√™ pode ajustar os coeficientes (a) e (b):""")

    
    a = st.slider("Coeficiente Angular (a)", -5, 5, 1, step=1)
    b = st.slider("Coeficiente Linear (b)", -10, 10, 0, step=1)

    x = np.arange(-10, 11, 1)  # Apenas inteiros de -10 a 10
    # Calcular os valores de y usando a fun√ß√£o afim
    y = a * x + b

    # Criar o gr√°fico com Plotly
    fig = go.Figure()
    fig.add_trace(go.Scatter(x=x, y=y, mode='markers+lines', name='f(x) = {}x + {}'.format(a, b)))

    
    fig.update_layout(
        title="Gr√°fico da Fun√ß√£o Afim",
        xaxis_title="x",
        yaxis_title="f(x)",
        template="plotly_dark",
        height=500
    )

    # Exibir o gr√°fico
    st.plotly_chart(fig)

with tab3:



    opcoes = ["Eletr√¥nica Anal√≥gica", "Amplificadores Lineares", "Oscilosc√≥pios"]
    selecao = st.multiselect("Selecione o que deseja visualizar:", opcoes)

    # Introdu√ß√£o √† Eletr√¥nica Anal√≥gica
    if "Eletr√¥nica Anal√≥gica" in selecao:
        st.header("Introdu√ß√£o √† Eletr√¥nica Anal√≥gica")
        st.write("""A eletr√¥nica anal√≥gica √© um ramo da eletr√¥nica que lida com sinais cont√≠nuos e a manipula√ß√£o desses sinais em circuitos que operam em n√≠veis de tens√£o e corrente vari√°veis. Ao contr√°rio da eletr√¥nica digital, que se baseia em sinais discretos e l√≥gicos, a eletr√¥nica anal√≥gica √© fundamental para o tratamento de informa√ß√µes que podem assumir um n√∫mero infinito de valores. Esse tipo de eletr√¥nica √© amplamente utilizado em amplificadores, filtros, osciladores e circuitos de modula√ß√£o, sendo essencial em diversas aplica√ß√µes, como √°udio, telecomunica√ß√µes e instrumenta√ß√£o.""")

    #amplificadores lineares
    if "Amplificadores Lineares" in selecao:
        st.header("Amplificadores Lineares")
        st.write("""Os amplificadores lineares, dispositivos centrais da eletr√¥nica anal√≥gica, s√£o projetados para aumentar o sinal de entrada sem distorcer suas caracter√≠sticas fundamentais. Eles seguem o princ√≠pio da fun√ß√£o afim \( y = ax + b \), onde \( x \) representa o sinal de entrada, \( a \) o ganho (que determina o quanto o sinal ser√° amplificado) e \( b \) uma constante que pode representar um ajuste de offset no circuito. A linearidade desses amplificadores √© crucial para garantir que o sinal de sa√≠da mantenha uma rela√ß√£o proporcional com o sinal de entrada, evitando distor√ß√µes.""")

    #oscilosc√≥pios
    if "Oscilosc√≥pios" in selecao:
        st.header("Oscilosc√≥pios")
        st.write("""O oscilosc√≥pio √© um instrumento fundamental na eletr√¥nica anal√≥gica, permitindo a visualiza√ß√£o e medi√ß√£o de sinais el√©tricos vari√°veis ao longo do tempo. Ele possibilita a observa√ß√£o da forma de onda de um sinal, sua amplitude, frequ√™ncia e qualquer distor√ß√£o presente. Quando conectado a um amplificador linear, o oscilosc√≥pio pode verificar a fidelidade da amplifica√ß√£o, evidenciando se a sa√≠da segue a mesma forma que a entrada e, portanto, se a rela√ß√£o entre ambos √© linear, conforme a fun√ß√£o afim \( y = ax + b \).""")

    # Conclus√£o
    if len(selecao) > 0:
        st.write("""Em s√≠ntese, a eletr√¥nica anal√≥gica desempenha um papel crucial na manipula√ß√£o de sinais cont√≠nuos, sendo os amplificadores lineares e oscilosc√≥pios ferramentas indispens√°veis para garantir a qualidade e a integridade dos sinais em uma ampla gama de aplica√ß√µes tecnol√≥gicas.""")

    
with tab4:
    t = np.linspace(0, 1, 500)  # vetor de tempo
    # Sliders para ajustar frequ√™ncia, amplitude e ganho (apenas inteiros)
    freq = st.slider("Frequ√™ncia (Hz)", 1, 10, 5, step=1)
    amplitude = st.slider("Amplitude", 1, 5, 1, step=1)
    gain = st.slider("Ganho", 1, 10, 2, step=1)

    # C√°lculo da onda
    wave = amplitude * np.sin(2 * np.pi * freq * t)
    amplified_wave = gain * wave  # Onda amplificada

    # Criar o gr√°fico
    fig = go.Figure()

    # onda original
    fig.add_trace(go.Scatter(x=t, y=wave, mode='lines', name='Sinal Original', line=dict(color='blue')))

    #onda amplificada
    fig.add_trace(go.Scatter(x=t, y=amplified_wave, mode='lines', name='Sinal Amplificado', line=dict(color='orange')))

    # layout se parecer com um oscilosc√≥pio
    fig.update_layout(
        title="Oscilosc√≥pio - Sinal Original e Amplificado",
        xaxis_title="Tempo (s)",
        yaxis_title="Amplitude",
        xaxis=dict(showgrid=True, zeroline=True),
        yaxis=dict(showgrid=True, zeroline=True),
        showlegend=False,
        height=500
    )

    # Adicionar marcadores de eixos y em inteiros
    y_tick_vals = np.arange(-gain * amplitude, gain * amplitude + 1, 1)
    fig.update_yaxes(tickvals=y_tick_vals)

    # Exibir o gr√°fico
    st.plotly_chart(fig)

    st.write("""Este simulador permite ajustar a frequ√™ncia, a amplitude e o ganho de um sinal senoidal. A onda original √© mostrada em azul, enquanto a onda amplificada √© exibida em laranja. Experimente alterar os valores dos sliders para ver como isso afeta as ondas!""")

    st.write("""
    ### Onde o Amplificador Est√° Agindo?

    No gr√°fico, o amplificador est√° atuando diretamente sobre a **amplitude** do sinal senoidal. A onda azul representa o **sinal original**, cuja amplitude √© controlada pelo valor selecionado no slider de 'Amplitude'. J√° a onda laranja corresponde ao **sinal amplificado**, onde o valor do **ganho** multiplica a amplitude do sinal original.

    Assim, o amplificador est√° **escalando a amplitude** da onda original, sem modificar sua frequ√™ncia ou forma. Quando o ganho √© aumentado, a diferen√ßa entre o sinal original e o amplificado se torna mais vis√≠vel, pois a amplitude da onda amplificada cresce proporcionalmente ao valor do ganho.

    Resumidamente, o amplificador modifica apenas a altura (ou intensidade) da onda, mantendo a frequ√™ncia e o formato da oscila√ß√£o inalterados. Quanto maior o ganho, maior ser√° essa amplifica√ß√£o visualizada na onda laranja.
    """)
